function Balls.new 0
push constant 2
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 1
push this 1
call Array.new 1
pop this 0
push pointer 0
call Balls.loadBalls 1
pop temp 0
push pointer 0
return
function Balls.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Balls.disposeBalls 1
pop temp 0
push this 0
call Array.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Balls.disposeBalls 2
push argument 0
pop pointer 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push this 1
lt
not
if-goto WHILE_END0
push local 1
push this 0
add
pop pointer 1
push that 0
pop local 0
push local 0
call Ball.dispose 1
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Balls.loadBalls 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
call Ball.new 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Balls.affect 2
push argument 0
pop pointer 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push this 1
lt
not
if-goto WHILE_END0
push local 1
push this 0
add
pop pointer 1
push that 0
pop local 0
push local 0
push argument 1
call Ball.affect 2
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Balls.getStopped 3
push argument 0
pop pointer 0
push constant 0
pop local 2
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push this 1
lt
not
if-goto WHILE_END0
push local 1
push this 0
add
pop pointer 1
push that 0
pop local 0
push local 0
call Ball.getStopped 1
pop local 2
push local 1
push constant 1
add
pop local 1
push local 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 2
return
label IF_FALSE0
goto WHILE_EXP0
label WHILE_END0
push local 2
return
function Balls.draw 2
push argument 0
pop pointer 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push this 1
lt
not
if-goto WHILE_END0
push local 1
push this 0
add
pop pointer 1
push that 0
pop local 0
push local 0
call Ball.draw 1
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
